on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  run_push:
    name: Push on master -> deploy
    runs-on: ubuntu-latest

    steps:
    - name: Install cloudflared
      run: |
        sudo mkdir -p --mode=0755 /usr/share/keyrings
        curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
        echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared noble main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
        sudo apt-get update
        sudo apt-get install -y cloudflared
        
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        {
          echo "Host ${{ secrets.SSH_HOSTNAME }}"
          echo "  ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h"
          echo "  StrictHostKeyChecking=no"
          echo "  UserKnownHostsFile=/dev/null"
        } >> ~/.ssh/config
        
    - name: Connect and Pull Code
      run: |
        ssh_retry() {
          for i in {1..3}; do
            {
              echo "set -e"
              echo "cd King-of-the-Cards"
              echo "git checkout master"
              echo "git pull"
              echo "pkill screen || true"
              echo "screen -d -m -S SERVER dotnet run --project ~/King-of-the-Cards/KC.Backend.API/KC.Backend.API.csproj --launch-profile 'http-public'"
            } | ssh -o ConnectTimeout=10 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOSTNAME }} && break || sleep 5
            echo "SSH attempt $i failed, retrying..." >&2
          done
        }
        ssh_retry
        
    - name: Cleanup
      if: always()
      run: |
        rm -rf ~/.ssh
        pkill -f "cloudflared access ssh" || true
